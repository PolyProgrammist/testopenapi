/*
 * okapirocket
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FinalExecutionOutcomeView : Execution outcome of the transaction and all the subsequent receipts. Could be not finalized yet
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FinalExecutionOutcomeView {
    /// Execution status defined by chain.rs:get_final_transaction_result FinalExecutionStatus::NotStarted - the tx is not converted to the receipt yet FinalExecutionStatus::Started - we have at least 1 receipt, but the first leaf receipt_id (using dfs) hasn't finished the execution FinalExecutionStatus::Failure - the result of the first leaf receipt_id FinalExecutionStatus::SuccessValue - the result of the first leaf receipt_id
    #[serde(rename = "status")]
    pub status: Box<models::FinalExecutionStatus>,
    /// Signed Transaction
    #[serde(rename = "transaction")]
    pub transaction: Box<models::SignedTransactionView>,
    /// The execution outcome of the signed transaction.
    #[serde(rename = "transaction_outcome")]
    pub transaction_outcome: Box<models::ExecutionOutcomeWithIdView>,
    /// The execution outcome of receipts.
    #[serde(rename = "receipts_outcome")]
    pub receipts_outcome: Vec<models::ExecutionOutcomeWithIdView>,
}

impl FinalExecutionOutcomeView {
    /// Execution outcome of the transaction and all the subsequent receipts. Could be not finalized yet
    pub fn new(status: models::FinalExecutionStatus, transaction: models::SignedTransactionView, transaction_outcome: models::ExecutionOutcomeWithIdView, receipts_outcome: Vec<models::ExecutionOutcomeWithIdView>) -> FinalExecutionOutcomeView {
        FinalExecutionOutcomeView {
            status: Box::new(status),
            transaction: Box::new(transaction),
            transaction_outcome: Box::new(transaction_outcome),
            receipts_outcome,
        }
    }
}

