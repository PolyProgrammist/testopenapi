/*
 * okapirocket
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DelegateAction : This action allows to execute the inner actions behalf of the defined sender.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DelegateAction {
    /// Signer of the delegated actions
    #[serde(rename = "sender_id")]
    pub sender_id: String,
    /// Receiver of the delegated actions.
    #[serde(rename = "receiver_id")]
    pub receiver_id: String,
    /// List of actions to be executed.  With the meta transactions MVP defined in NEP-366, nested DelegateActions are not allowed. A separate type is used to enforce it.
    #[serde(rename = "actions")]
    pub actions: Vec<models::NonDelegateAction>,
    /// Nonce to ensure that the same delegate action is not sent twice by a relayer and should match for given account's `public_key`. After this action is processed it will increment.
    #[serde(rename = "nonce")]
    pub nonce: i32,
    /// The maximal height of the block in the blockchain below which the given DelegateAction is valid.
    #[serde(rename = "max_block_height")]
    pub max_block_height: i32,
    /// Public key used to sign this delegated action.
    #[serde(rename = "public_key")]
    pub public_key: String,
}

impl DelegateAction {
    /// This action allows to execute the inner actions behalf of the defined sender.
    pub fn new(sender_id: String, receiver_id: String, actions: Vec<models::NonDelegateAction>, nonce: i32, max_block_height: i32, public_key: String) -> DelegateAction {
        DelegateAction {
            sender_id,
            receiver_id,
            actions,
            nonce,
            max_block_height,
            public_key,
        }
    }
}

