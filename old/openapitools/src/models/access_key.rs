/*
 * okapirocket
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AccessKey : Access key provides limited access to an account. Each access key belongs to some account and is identified by a unique (within the account) public key. One account may have large number of access keys. Access keys allow to act on behalf of the account by restricting transactions that can be issued. `account_id,public_key` is a key in the state
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccessKey {
    /// Nonce for this access key, used for tx nonce generation. When access key is created, nonce is set to `(block_height - 1) * 1e6` to avoid tx hash collision on access key re-creation. See <https://github.com/near/nearcore/issues/3779> for more details.
    #[serde(rename = "nonce")]
    pub nonce: i32,
    /// Defines permissions for this access key.
    #[serde(rename = "permission")]
    pub permission: Box<models::AccessKeyPermission>,
}

impl AccessKey {
    /// Access key provides limited access to an account. Each access key belongs to some account and is identified by a unique (within the account) public key. One account may have large number of access keys. Access keys allow to act on behalf of the account by restricting transactions that can be issued. `account_id,public_key` is a key in the state
    pub fn new(nonce: i32, permission: models::AccessKeyPermission) -> AccessKey {
        AccessKey {
            nonce,
            permission: Box::new(permission),
        }
    }
}

