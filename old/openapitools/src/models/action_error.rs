/*
 * okapirocket
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ActionError : An error happened during Action execution
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionError {
    /// Index of the failed action in the transaction. Action index is not defined if ActionError.kind is `ActionErrorKind::LackBalanceForState`
    #[serde(rename = "index", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub index: Option<Option<i32>>,
    /// The kind of ActionError happened
    #[serde(rename = "kind")]
    pub kind: Box<models::ActionErrorKind>,
}

impl ActionError {
    /// An error happened during Action execution
    pub fn new(kind: models::ActionErrorKind) -> ActionError {
        ActionError {
            index: None,
            kind: Box::new(kind),
        }
    }
}

