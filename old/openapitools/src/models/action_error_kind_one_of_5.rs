/*
 * okapirocket
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ActionErrorKindOneOf5 : Account tries to remove an access key that doesn't exist
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionErrorKindOneOf5 {
    #[serde(rename = "DeleteKeyDoesNotExist")]
    pub delete_key_does_not_exist: Box<models::ActionErrorKindOneOf5DeleteKeyDoesNotExist>,
}

impl ActionErrorKindOneOf5 {
    /// Account tries to remove an access key that doesn't exist
    pub fn new(delete_key_does_not_exist: models::ActionErrorKindOneOf5DeleteKeyDoesNotExist) -> ActionErrorKindOneOf5 {
        ActionErrorKindOneOf5 {
            delete_key_does_not_exist: Box::new(delete_key_does_not_exist),
        }
    }
}

