/*
 * okapirocket
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SignedTransactionView {
    /// NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```
    #[serde(rename = "signer_id")]
    pub signer_id: String,
    #[serde(rename = "public_key")]
    pub public_key: String,
    #[serde(rename = "nonce")]
    pub nonce: i32,
    /// NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```
    #[serde(rename = "receiver_id")]
    pub receiver_id: String,
    #[serde(rename = "actions")]
    pub actions: Vec<models::ActionView>,
    #[serde(rename = "priority_fee", skip_serializing_if = "Option::is_none")]
    pub priority_fee: Option<i32>,
    #[serde(rename = "signature")]
    pub signature: String,
    #[serde(rename = "hash")]
    pub hash: String,
}

impl SignedTransactionView {
    pub fn new(signer_id: String, public_key: String, nonce: i32, receiver_id: String, actions: Vec<models::ActionView>, signature: String, hash: String) -> SignedTransactionView {
        SignedTransactionView {
            signer_id,
            public_key,
            nonce,
            receiver_id,
            actions,
            priority_fee: None,
            signature,
            hash,
        }
    }
}

