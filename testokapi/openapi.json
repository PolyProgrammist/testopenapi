{
    "openapi": "3.0.0",
    "info": {
      "title": "testokapi",
      "version": "0.1.0"
    },
    "paths": {
      "/user": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all users",
          "description": "Returns all users in the system.",
          "operationId": "get_all_users",
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Create user",
          "operationId": "create_user",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/user/{id}": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user",
          "description": "Returns a single user by ID.",
          "operationId": "get_user",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": ""
            }
          }
        }
      },
      "/user_example": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user by name",
          "description": "Returns a single user by username.",
          "operationId": "get_user_by_name",
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "email",
              "in": "query",
              "schema": {
                "type": "string",
                "nullable": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": ""
            }
          }
        }
      },
      "/post_by_query": {
        "get": {
          "tags": [
            "Posts"
          ],
          "summary": "Create post using query params",
          "description": "Returns the created post.",
          "operationId": "create_post_by_query",
          "parameters": [
            {
              "name": "post_id",
              "in": "query",
              "description": "The unique identifier for the post.",
              "required": true,
              "schema": {
                "description": "The unique identifier for the post.",
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "title",
              "in": "query",
              "description": "The title of the post.",
              "required": true,
              "schema": {
                "description": "The title of the post.",
                "type": "string"
              }
            },
            {
              "name": "summary",
              "in": "query",
              "description": "A short summary of the post.",
              "schema": {
                "description": "A short summary of the post.",
                "type": "string",
                "nullable": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            },
            "404": {
              "description": ""
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "required": [
            "userId",
            "username",
            "x"
          ],
          "properties": {
            "userId": {
              "description": "A unique user identifier.",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "username": {
              "description": "The current username of the user.",
              "type": "string"
            },
            "email": {
              "type": "string",
              "nullable": true,
              "example": "test@example.com"
            },
            "x": {
              "$ref": "#/components/schemas/Xenum"
            }
          }
        },
        "Xenum": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Axenum"
              ]
            },
            {
              "type": "object",
              "required": [
                "Bxenum"
              ],
              "properties": {
                "Bxenum": {
                  "type": "object",
                  "required": [
                    "age",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer",
                      "format": "uint64",
                      "minimum": 0.0
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "Post": {
          "type": "object",
          "required": [
            "post_id",
            "title"
          ],
          "properties": {
            "post_id": {
              "description": "The unique identifier for the post.",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "title": {
              "description": "The title of the post.",
              "type": "string"
            },
            "summary": {
              "description": "A short summary of the post.",
              "type": "string",
              "nullable": true
            }
          }
        }
      }
    }
  }